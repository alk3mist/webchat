{"version":3,"sources":["components/App/logo.svg","components/Chat/MessageList.js","components/Chat/MessageForm.js","components/Chat/Chat.js","components/Chat/index.js","components/Login/index.js","components/Login/Login.js","api.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","userShape","PropTypes","shape","id","number","isRequired","username","string","text","created_at","instanceOf","Date","author","Message","_ref","message","messageClass","concat","react_default","a","createElement","className","toLocaleDateString","undefined","year","month","day","hour","minute","second","MessageList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToBottom","bottomRef","current","scrollIntoView","behavior","renderMessages","_this$props","messages","map","key","React","createRef","listRef","prevProps","prevState","prevMessages","length","prevLatestMessage","latestMessage","prevFirstMessage","firstMessage","list","scrollHeight","scrollTop","snapshot","canLoadMore","ref","onClick","onLoadMore","Component","MessageForm","handleInputChange","event","inputValue","target","value","setState","handleInputKeyUp","keyCode","preventDefault","ctrlKey","input","inputRef","start","selectionStart","state","newInputValue","slice","selectionEnd","updatedInput","submit","trim","onSubmit","placeholder","onChange","onKeyUp","autoFocus","maxLength","type","Chat","error","onLogout","toString","MessageList_MessageList","MessageForm_MessageForm","onSendMessage","defaultProps","Login","handleSubmit","DEBUG","process","REACT_APP_DEBUG","instance","axios","create","baseURL","buildURL","pathname","headers","Content-Type","Access-Control-Allow-Origin","credentials","wrapped","asyncToGenerator","regenerator_default","mark","_callee","result","response","_args","arguments","wrap","_context","prev","next","apply","sent","abrupt","data","t0","test","stop","getList","url","_ref2","_ref2$filters","filters","_ref2$search","search","others","objectWithoutProperties","params","get","objectSpread","getByURL","getMessages","_ref3","_callee2","_context2","results","normalizeMessage","_x","getMessagesByURL","_ref4","_callee3","_context3","_x2","_ref5","connectToChat","_ref6","_ref6$onOpen","onOpen","console","log","_ref6$onClose","onClose","_ref6$onMessage","onMessage","_ref6$onError","onError","chatURL","protocol","window","location","ws","ReconnectingWebSocket","debug","onopen","onclose","onerror","onmessage","JSON","parse","payload","_ref7","_ref7$protocol","_ref7$hostname","hostname","_ref7$port","port","_ref7$pathname","portPrefix","App","login","api","handleMessage","bind","assertThisInitialized","handleError","handleClose","handleConnect","connected","fetchMessages","toConsumableArray","previousPageURL","page_size","created_before","toISOString","reverse","sendMessage","_callee4","_context4","stringify","send","e","logout","close","_this$state","src","logo","alt","components_Chat","components_Login","Boolean","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a9a8559.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.14ec0f32.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport function formatDate(date) {\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n    };\n    return date.toLocaleDateString(undefined, options);\n}\n\nconst userShape = PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    username: PropTypes.string.isRequired\n});\nexport const messageShape = PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    created_at: PropTypes.instanceOf(Date).isRequired,\n    author: userShape.isRequired\n});\nMessage.propTypes = {\n    message: messageShape.isRequired,\n    username: PropTypes.string.isRequired\n};\n\nfunction Message({message, username}) {\n    const {author, text, created_at} = message;\n    const messageClass = `message ${author.username === username ? 'float-right' : 'float-left'}`;\n    return (\n        <li className={messageClass}>\n            {author.username !== username &&\n            <h4>{author.username}</h4>}\n            <pre>{text}</pre>\n            <p className='float-right'>\n                <small>{formatDate(created_at)}</small>\n            </p>\n        </li>\n    );\n}\n\nexport default class MessageList extends React.Component {\n    static propTypes = {\n        messages: PropTypes.arrayOf(messageShape).isRequired,\n        username: PropTypes.string.isRequired,\n        canLoadMore: PropTypes.bool.isRequired,\n        onLoadMore: PropTypes.func.isRequired,\n        error: PropTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n        this.bottomRef = React.createRef();\n        this.listRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.scrollToBottom()\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const prevMessages = prevProps.messages;\n        const messages = this.props.messages;\n        // First load\n        if (!prevMessages.length) {\n            return 'scrollToBottom';\n        }\n        // No messages\n        if (!messages.length) {\n            return null;\n        }\n\n        const prevLatestMessage = prevMessages[prevMessages.length - 1];\n        const latestMessage = messages[messages.length - 1];\n        // New message received\n        if (prevLatestMessage.created_at < latestMessage.created_at) {\n            return 'scrollToBottom';\n        }\n        const prevFirstMessage = prevMessages[0];\n        const firstMessage = messages[0];\n        // Earlier messages fetched. Remember scroll position\n        if (prevFirstMessage.created_at > firstMessage.created_at) {\n            const list = this.listRef.current;\n            return list.scrollHeight - list.scrollTop;\n        }\n        return null;\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (snapshot === 'scrollToBottom') {\n            this.scrollToBottom();\n        } else if (snapshot !== null) {\n            // Restore scroll position\n            const list = this.listRef.current;\n            list.scrollTop = list.scrollHeight - snapshot;\n        }\n    }\n\n    scrollToBottom = () => {\n        this.bottomRef.current.scrollIntoView({behavior: \"smooth\"});\n    };\n\n    renderMessages = () => {\n        const {messages, username} = this.props;\n        return messages.map(message =>\n            <Message\n                key={message.id}\n                message={message}\n                username={username}\n            />\n        );\n    };\n\n    render() {\n        const {canLoadMore} = this.props;\n        return (\n            <ul className=\"list-message\" ref={this.listRef}>\n                {canLoadMore &&\n                <li className='center w-50 mb-1'>\n                    <button className=\"button w-100\"\n                            onClick={this.props.onLoadMore}>\n                        Load more messages\n                    </button>\n                </li>}\n                {this.renderMessages()}\n                <li ref={this.bottomRef}/>\n            </ul>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default class MessageForm extends React.Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: ''\n        };\n        this.inputRef = React.createRef();\n    }\n\n    handleInputChange = (event) => {\n        const inputValue = event.target.value;\n        this.setState({inputValue});\n    };\n    handleInputKeyUp = (event) => {\n        if (event.keyCode === 27) {\n            this.setState({inputValue: ''})\n        } else if (event.keyCode === 13) {\n            event.preventDefault();\n            if (event.ctrlKey) {\n                const input = this.inputRef.current;\n                const start = input.selectionStart;\n                const value = this.state.inputValue;\n                const newInputValue = value.slice(0, start) + '\\n' + value.slice(input.selectionEnd);\n                this.setState({inputValue: newInputValue}, () => {\n                    const updatedInput = this.inputRef.current;\n                    updatedInput.selectionStart = updatedInput.selectionEnd = start + 1;\n                });\n            } else {\n                this.submit();\n            }\n        }\n    };\n    submit = (event) => {\n        if (typeof event !== \"undefined\") {\n            event.preventDefault();\n        }\n        const {inputValue} = this.state;\n        if (inputValue.trim().length) {\n            this.props.onSubmit(inputValue);\n            this.setState({inputValue: ''});\n        }\n    };\n\n    render() {\n        return (\n            <form className='message-form' onSubmit={this.submit}>\n                <textarea\n                    ref={this.inputRef}\n                    placeholder='Type a message. Press Enter to send a message, Shift+Enter to add a line.'\n                    value={this.state.inputValue}\n                    onChange={this.handleInputChange}\n                    onKeyUp={this.handleInputKeyUp}\n                    autoFocus={true}\n                    maxLength={300}\n                />\n                <button type='submit' className='button'>\n                    <code>&#9658;</code>\n                </button>\n            </form>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageList, {messageShape} from \"./MessageList\";\nimport MessageForm from \"./MessageForm\";\n\nimport './Chat.css';\n\n\nexport default class Chat extends React.Component {\n    static propTypes = {\n        messages: PropTypes.arrayOf(messageShape),\n        username: PropTypes.string.isRequired,\n        onSendMessage: PropTypes.func.isRequired,\n        canLoadMore: PropTypes.bool.isRequired,\n        onLoadMore: PropTypes.func.isRequired,\n        onLogout: PropTypes.func.isRequired,\n        error: PropTypes.any\n    };\n    static defaultProps = {\n        messages: [],\n    };\n\n    render() {\n        const {username, messages, canLoadMore, error} = this.props;\n        return (\n            <div className=\"chat\">\n                <div className=\"header\">\n                    <h3>WebChat</h3>\n                    <div className='float-right'>\n                        {username} <span className='button button-sm' onClick={this.props.onLogout}>&#10005;</span>\n                    </div>\n                </div>\n\n                <hr/>\n                {!!error &&\n                <div className=\"error-message\">\n                    {error.toString()}\n                </div>}\n                <MessageList\n                    messages={messages}\n                    username={username}\n                    canLoadMore={canLoadMore}\n                    onLoadMore={this.props.onLoadMore}\n                />\n                <MessageForm onSubmit={this.props.onSendMessage}/>\n            </div>\n        );\n    }\n}\n","import Chat from './Chat';\n\nexport default Chat;\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Login extends React.Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: ''\n        };\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit(this.state.username);\n    };\n    handleInputChange = (event) => {\n        this.setState({username: event.target.value});\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder='Enter your name'\n                    value={this.state.username}\n                    onChange={this.handleInputChange}\n                />\n                <button type=\"submit\" className='button' >\n                    Login\n                </button>\n            </form>\n        )\n    }\n}\n","import axios from 'axios/index';\nimport ReconnectingWebSocket from 'reconnectingwebsocket';\n\nconst DEBUG = process.env.REACT_APP_DEBUG === 'True';\n\nconst instance = axios.create({\n    baseURL: buildURL({pathname: `/api/`}),\n    headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n    },\n    credentials: 'same-origin'\n});\n\n/**\n * Return result of API call or raise error with JSON response data\n * @param  {Function} wrapped Async API call.\n * @return {Array, Object} Parsed JSON data.\n */\nfunction call(wrapped) {\n    return async function () {\n        try {\n            const result = await wrapped.apply(this, arguments);\n            return result.data;\n        } catch (e) {\n            const {response} = e;\n            if (response && /json/i.test(response.headers['content-type'])) {\n                e.data = response.data;\n            }\n            throw e;\n        }\n    }\n}\n\n// base API methods\nexport const get = (url, params) => call(instance.get)(url, {params});\nconst getList = (url, {filters = {}, search = null, ...others}) => get(url, {...filters, ...others, search});\nexport const getByURL = (url) => call(instance.get)(url);\n\n\n// messages\nexport const getMessages = async (params) => {\n    const data = await getList('/messages/', params);\n    data.results = data.results.map(normalizeMessage);\n    return data;\n};\nexport const getMessagesByURL = async url => {\n    const data = await getByURL(url);\n    data.results = data.results.map(normalizeMessage);\n    return data;\n};\n\nfunction normalizeMessage({created_at, ...others}) {\n    return {\n        created_at: new Date(created_at),\n        ...others\n    }\n}\n\nexport function connectToChat({onOpen = console.log, onClose = console.log, onMessage = console.log, onError = console.log}) {\n    const chatURL = buildURL({\n        protocol: (window.location.protocol === 'https:') ? 'wss://' : 'ws://',\n        pathname: '/ws/chat/'\n    });\n\n    const ws = new ReconnectingWebSocket(chatURL, null, {debug: DEBUG});\n    ws.onopen = onOpen;\n    ws.onclose = onClose;\n    ws.onerror = onError;\n    ws.onmessage = function (message) {\n        const data = JSON.parse(message.data);\n        onMessage(normalizeMessage(data.payload))\n    };\n    return ws;\n}\n\n\nfunction buildURL(\n    {\n        protocol = window.location.protocol,\n        hostname = window.location.hostname,\n        port = DEBUG ? '8000' : window.location.port,\n        pathname = '/'\n    }) {\n    const portPrefix = port.length ? ':' : '';\n    return `${protocol}//${hostname}${portPrefix}${port}${pathname}`\n}\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Chat from '../Chat';\nimport Login from '../Login';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport * as api from \"../../api\";\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            previousPageURL: null,\n            connected: false,\n            messages: [],\n            username: null\n        }\n    }\n\n    login = async (username) => {\n        await this.setState({username});\n        if (username.trim()) {\n            this.ws = api.connectToChat({\n                onMessage: this.handleMessage.bind(this),\n                onError: this.handleError.bind(this),\n                onClose: this.handleClose.bind(this),\n                onOpen: this.handleConnect.bind(this)\n            });\n        }\n    };\n    handleConnect = async () => {\n        await this.setState({connected: true, error: null});\n        await this.fetchMessages();\n    };\n    handleMessage = (message) => {\n        this.setState({\n            messages: [...this.state.messages, message]\n        });\n    };\n    handleError = () => {\n        this.setState({error: 'Connection error. Trying reconnect...'});\n    };\n    handleClose = () => {\n        this.setState({\n            connected: false,\n            messages: [],\n            previousPageURL: null\n        });\n    };\n    fetchMessages = async () => {\n        const url = this.state.previousPageURL;\n        const response = (url == null)\n            ? await api.getMessages({\n                page_size: 50,\n                filters: {created_before: new Date().toISOString()}\n            })\n            : await api.getMessagesByURL(url);\n\n        // Reverse and next since\n        // we get messages in reverse order\n        await this.setState({\n            messages: [\n                ...response.results.reverse(),\n                ...this.state.messages\n            ],\n            previousPageURL: response.next\n        })\n    };\n\n    sendMessage = async (text) => {\n        try {\n            const {username} = this.state;\n            const data = JSON.stringify({username, text});\n            this.ws.send(data);\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    logout = () => {\n        this.ws.close();\n        this.setState({username: ''});\n    };\n\n    render() {\n        const {username, messages, previousPageURL, connected, error} = this.state;\n        return (\n            <div className='app'>\n                <img src={logo} alt=\"logo\"\n                     className={`logo-background ${connected ? \"logo-spin\" : \"\"}`}\n                />\n                <div className=\"container\">\n                    {username\n                        ? <Chat username={username}\n                                messages={messages}\n                                onSendMessage={this.sendMessage}\n                                canLoadMore={previousPageURL != null}\n                                onLoadMore={this.fetchMessages}\n                                onLogout={this.logout}\n                                error={error}\n                        />\n                        : <Login onSubmit={this.login}/>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}