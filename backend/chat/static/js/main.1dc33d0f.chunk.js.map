{"version":3,"sources":["components/App/logo.svg","components/Chat/MessageList.js","components/Chat/MessageForm.js","components/Chat/Chat.js","components/Chat/index.js","components/Login/index.js","components/Login/Login.js","api.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","userShape","PropTypes","shape","id","number","isRequired","username","string","MessageList","text","created_at","instanceOf","Date","author","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToBottom","bottomRef","current","scrollIntoView","behavior","renderMessages","messages","map","_ref","react_default","a","createElement","key","className","concat","toLocaleDateString","undefined","year","month","day","hour","minute","second","React","createRef","prevProps","prevState","snapshot","prevMessages","length","prevLatestMessage","latestMessage","canLoadMore","onClick","onLoadMore","ref","Component","MessageForm","handleInputChange","event","inputValue","target","value","setState","handleInputKeyUp","keyCode","ctrlKey","preventDefault","submit","state","trim","onSubmit","inputRef","endsWith","scrollTo","scrollHeight","placeholder","onChange","onKeyUp","autoFocus","maxLength","type","Chat","_this$props","error","onLogout","toString","MessageList_MessageList","MessageForm_MessageForm","onSendMessage","defaultProps","Login","handleSubmit","DEBUG","process","REACT_APP_DEBUG","instance","axios","create","baseURL","buildURL","pathname","headers","Content-Type","Access-Control-Allow-Origin","credentials","wrapped","asyncToGenerator","regenerator_default","mark","_callee","result","response","_args","arguments","wrap","_context","prev","next","apply","sent","abrupt","data","t0","test","stop","getList","url","_ref2","_ref2$filters","filters","_ref2$search","search","others","objectWithoutProperties","params","get","objectSpread","getByURL","getMessages","_ref3","_callee2","_context2","results","normalizeMessage","_x","getMessagesByURL","_ref4","_callee3","_context3","_x2","_ref5","connectToChat","_ref6","_ref6$onOpen","onOpen","console","log","_ref6$onClose","onClose","_ref6$onMessage","onMessage","_ref6$onError","onError","chatURL","protocol","window","location","ws","ReconnectingWebSocket","debug","onopen","onclose","onerror","onmessage","message","JSON","parse","payload","_ref7","_ref7$protocol","_ref7$hostname","hostname","_ref7$port","port","_ref7$pathname","portPrefix","App","login","api","handleMessage","bind","assertThisInitialized","handleError","handleClose","handleConnect","connected","fetchMessages","toConsumableArray","previousPageURL","page_size","created_before","toISOString","reverse","sendMessage","_callee4","_context4","stringify","send","e","logout","close","_this$state","src","logo","alt","components_Chat","components_Login","Boolean","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1dc33d0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.14ec0f32.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport function formatDate(date) {\n    const options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric',\n    };\n    return date.toLocaleDateString(undefined, options);\n}\n\nconst userShape = PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    username: PropTypes.string.isRequired\n});\nexport const messageShape = PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    created_at: PropTypes.instanceOf(Date).isRequired,\n    author: userShape.isRequired\n});\n\nexport default class MessageList extends React.Component {\n    static propTypes = {\n        messages: PropTypes.arrayOf(messageShape).isRequired,\n        username: PropTypes.string.isRequired,\n        canLoadMore: PropTypes.bool.isRequired,\n        onLoadMore: PropTypes.func.isRequired,\n        error: PropTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n        this.bottomRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.scrollToBottom()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const prevMessages = prevProps.messages;\n        const messages = this.props.messages;\n        // First load\n        if (!prevMessages.length) {\n            this.scrollToBottom();\n            return;\n        }\n        // No messages\n        if (!messages.length) {\n            return;\n        }\n\n        const prevLatestMessage = prevMessages[prevMessages.length - 1];\n        const latestMessage = messages[messages.length - 1];\n        // New message received\n        if (prevLatestMessage.created_at < latestMessage.created_at) {\n            this.scrollToBottom();\n        }\n    }\n\n    scrollToBottom = () => {\n        this.bottomRef.current.scrollIntoView({behavior: \"smooth\"});\n    };\n\n    renderMessages = () => {\n        const {username} = this.props;\n        return this.props.messages.map(({id, text, author, created_at}) =>\n            <li key={id}\n                className={`message ${author.username === username ? 'float-right' : 'float-left'}`}\n            >\n                {author.username !== username &&\n                <h4>{author.username}</h4>}\n                <pre>{text}</pre>\n                <p className='float-right'>\n                    <small>{formatDate(created_at)}</small>\n                </p>\n            </li>\n        )\n    };\n\n    render() {\n        const {canLoadMore} = this.props;\n        return (\n            <ul className=\"list-message\">\n                {canLoadMore &&\n                <li className='center w-50 mb-1'>\n                    <button className=\"button w-100\"\n                            onClick={this.props.onLoadMore}>\n                        Load more messages\n                    </button>\n                </li>}\n                {this.renderMessages()}\n                <li ref={this.bottomRef}/>\n            </ul>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default class MessageForm extends React.Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: ''\n        };\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.inputValue.endsWith('\\n')) {\n            this.inputRef.current.scrollTo(0, this.inputRef.current.scrollHeight)\n        }\n    }\n\n    handleInputChange = (event) => {\n        const inputValue = event.target.value;\n        this.setState({inputValue});\n    };\n    handleInputKeyUp = (event) => {\n        const value = event.target.value;\n        if (event.keyCode === 27) {\n            this.setState({inputValue: ''})\n        } else if (event.keyCode === 13) {\n            if (event.ctrlKey) {\n                this.setState({inputValue: value + '\\n'});\n            } else {\n                event.preventDefault();\n                this.submit();\n                return false;\n            }\n        }\n    };\n    submit = (event) => {\n        if (typeof event !== \"undefined\") {\n            event.preventDefault();\n        }\n        const {inputValue} = this.state;\n        if (inputValue.trim().length) {\n            this.props.onSubmit(inputValue);\n            this.setState({inputValue: ''});\n        }\n    };\n\n    render() {\n        return (\n            <form className='message-form' onSubmit={this.submit}>\n                <textarea\n                    ref={this.inputRef}\n                    placeholder='Type a message. Press Enter to send a message, Ctrl+Enter to add a line.'\n                    value={this.state.inputValue}\n                    onChange={this.handleInputChange}\n                    onKeyUp={this.handleInputKeyUp}\n                    autoFocus={true}\n                    maxLength={300}\n                />\n                <button type='submit' className='button'>\n                    <code>&#9658;</code>\n                </button>\n            </form>\n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageList, {messageShape} from \"./MessageList\";\nimport MessageForm from \"./MessageForm\";\n\nimport './Chat.css';\n\n\nexport default class Chat extends React.Component {\n    static propTypes = {\n        messages: PropTypes.arrayOf(messageShape),\n        username: PropTypes.string.isRequired,\n        onSendMessage: PropTypes.func.isRequired,\n        canLoadMore: PropTypes.bool.isRequired,\n        onLoadMore: PropTypes.func.isRequired,\n        onLogout: PropTypes.func.isRequired,\n        error: PropTypes.any\n    };\n    static defaultProps = {\n        messages: [],\n    };\n\n    render() {\n        const {username, messages, canLoadMore, error} = this.props;\n        return (\n            <div className=\"chat\">\n                <div className=\"header\">\n                    <h3>WebChat</h3>\n                    <div className='float-right'>\n                        {username} <span className='button button-sm' onClick={this.props.onLogout}>&#10005;</span>\n                    </div>\n                </div>\n\n                <hr/>\n                {!!error &&\n                <div className=\"error-message\">\n                    {error.toString()}\n                </div>}\n                <MessageList\n                    messages={messages}\n                    username={username}\n                    canLoadMore={canLoadMore}\n                    onLoadMore={this.props.onLoadMore}\n                />\n                <MessageForm onSubmit={this.props.onSendMessage}/>\n            </div>\n        );\n    }\n}\n","import Chat from './Chat';\n\nexport default Chat;\n","import Login from './Login';\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Login extends React.Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: ''\n        };\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit(this.state.username);\n    };\n    handleInputChange = (event) => {\n        this.setState({username: event.target.value});\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder='Enter your name'\n                    value={this.state.username}\n                    onChange={this.handleInputChange}\n                />\n                <button type=\"submit\" className='button' >\n                    Login\n                </button>\n            </form>\n        )\n    }\n}\n","import axios from 'axios/index';\nimport ReconnectingWebSocket from 'reconnectingwebsocket';\n\nconst DEBUG = process.env.REACT_APP_DEBUG === 'True';\n\nconst instance = axios.create({\n    baseURL: buildURL({pathname: `/api/`}),\n    headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n    },\n    credentials: 'same-origin'\n});\n\n/**\n * Return result of API call or raise error with JSON response data\n * @param  {Function} wrapped Async API call.\n * @return {Array, Object} Parsed JSON data.\n */\nfunction call(wrapped) {\n    return async function () {\n        try {\n            const result = await wrapped.apply(this, arguments);\n            return result.data;\n        } catch (e) {\n            const {response} = e;\n            if (response && /json/i.test(response.headers['content-type'])) {\n                e.data = response.data;\n            }\n            throw e;\n        }\n    }\n}\n\n// base API methods\nexport const get = (url, params) => call(instance.get)(url, {params});\nconst getList = (url, {filters = {}, search = null, ...others}) => get(url, {...filters, ...others, search});\nexport const getByURL = (url) => call(instance.get)(url);\n\n\n// messages\nexport const getMessages = async (params) => {\n    const data = await getList('/messages/', params);\n    data.results = data.results.map(normalizeMessage);\n    return data;\n};\nexport const getMessagesByURL = async url => {\n    const data = await getByURL(url);\n    data.results = data.results.map(normalizeMessage);\n    return data;\n};\n\nfunction normalizeMessage({created_at, ...others}) {\n    return {\n        created_at: new Date(created_at),\n        ...others\n    }\n}\n\nexport function connectToChat({onOpen = console.log, onClose = console.log, onMessage = console.log, onError = console.log}) {\n    const chatURL = buildURL({\n        protocol: (window.location.protocol === 'https:') ? 'wss://' : 'ws://',\n        pathname: '/ws/chat/'\n    });\n\n    const ws = new ReconnectingWebSocket(chatURL, null, {debug: DEBUG});\n    ws.onopen = onOpen;\n    ws.onclose = onClose;\n    ws.onerror = onError;\n    ws.onmessage = function (message) {\n        const data = JSON.parse(message.data);\n        onMessage(normalizeMessage(data.payload))\n    };\n    return ws;\n}\n\n\nfunction buildURL(\n    {\n        protocol = window.location.protocol,\n        hostname = window.location.hostname,\n        port = DEBUG ? '8000' : window.location.port,\n        pathname = '/'\n    }) {\n    const portPrefix = port.length ? ':' : '';\n    return `${protocol}//${hostname}${portPrefix}${port}${pathname}`\n}\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Chat from '../Chat';\nimport Login from '../Login';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport * as api from \"../../api\";\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            previousPageURL: null,\n            connected: false,\n            messages: [],\n            username: null\n        }\n    }\n\n    login = async (username) => {\n        await this.setState({username});\n        if (username.trim()) {\n            this.ws = api.connectToChat({\n                onMessage: this.handleMessage.bind(this),\n                onError: this.handleError.bind(this),\n                onClose: this.handleClose.bind(this),\n                onOpen: this.handleConnect.bind(this)\n            });\n        }\n    };\n    handleConnect = async () => {\n        await this.setState({connected: true, error: null});\n        await this.fetchMessages();\n    };\n    handleMessage = (message) => {\n        this.setState({\n            messages: [...this.state.messages, message]\n        });\n    };\n    handleError = () => {\n        this.setState({error: 'Connection error. Trying reconnect...'});\n    };\n    handleClose = () => {\n        this.setState({\n            connected: false,\n            messages: [],\n            previousPageURL: null\n        });\n    };\n    fetchMessages = async () => {\n        const url = this.state.previousPageURL;\n        const response = (url == null)\n            ? await api.getMessages({\n                page_size: 50,\n                filters: {created_before: new Date().toISOString()}\n            })\n            : await api.getMessagesByURL(url);\n\n        // Reverse and next since\n        // we get messages in reverse order\n        await this.setState({\n            messages: [\n                ...response.results.reverse(),\n                ...this.state.messages\n            ],\n            previousPageURL: response.next\n        })\n    };\n\n    sendMessage = async (text) => {\n        try {\n            const {username} = this.state;\n            const data = JSON.stringify({username, text});\n            this.ws.send(data);\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n    logout = () => {\n        this.ws.close();\n        this.setState({username: ''});\n    };\n\n    render() {\n        const {username, messages, previousPageURL, connected, error} = this.state;\n        return (\n            <div className='app'>\n                <img src={logo} alt=\"logo\"\n                     className={`logo-background ${connected ? \"logo-spin\" : \"\"}`}\n                />\n                <div className=\"container\">\n                    {username\n                        ? <Chat username={username}\n                                messages={messages}\n                                onSendMessage={this.sendMessage}\n                                canLoadMore={previousPageURL != null}\n                                onLoadMore={this.fetchMessages}\n                                onLogout={this.logout}\n                                error={error}\n                        />\n                        : <Login onSubmit={this.login}/>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}